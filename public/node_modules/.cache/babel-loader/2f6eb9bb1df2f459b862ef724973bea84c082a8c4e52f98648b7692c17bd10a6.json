{"ast":null,"code":"import axios from 'axios';\nimport openNotification from '../utils/notification';\nexport const getVideoID = url => {\n  var videoid = url.match(/(?:https?:\\/{2})?(?:w{3}\\.)?youtu(?:be)?\\.(?:com|be)(?:\\/watch\\?v=|\\/)([^\\s&]+)/);\n  if (videoid != null) {\n    return videoid[1];\n  } else {\n    return null;\n  }\n};\nexport const getVideoSubtitles = async url => {\n  const videoId = getVideoID(url);\n  console.log(\"Key : \", process.env.REACT_APP_SUBTITLE_API);\n  if (!videoId) {\n    openNotification({\n      type: 'info',\n      message: 'Please enter valid URL'\n    });\n    return;\n  }\n  const options = {\n    method: 'GET',\n    url: process.env.REACT_APP_SUBTITLE_API,\n    params: {\n      video_id: videoId\n    },\n    headers: {\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n      'X-RapidAPI-Host': process.env.REACT_APP_SUBTITLE_HOST\n    }\n  };\n  const subtitles = (await axios(options)).data;\n  return subtitles;\n};\nexport const getSummaryByText = async (text, type) => {\n  const endPoint = type === 'text' ? 'summarize-text' : 'summarize-url';\n  const data = type == 'text' ? {\n    text,\n    num_sentences: 5\n  } : {\n    url: text,\n    num_sentences: 5,\n    is_detailed: false\n  };\n  const options = {\n    method: 'POST',\n    url: `${process.env.REACT_APP_SUMMARY_API}/${endPoint}/`,\n    headers: {\n      'content-type': 'application/json',\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n      'X-RapidAPI-Host': process.env.REACT_APP_SUMMARY_HOST\n    },\n    data\n  };\n  const response = (await axios.request(options)).data.summary;\n  return response;\n};\nexport const getTranslation = async (text, from, to) => {\n  const options = {\n    method: 'POST',\n    url: process.env.REACT_APP_TRANSLATE_API,\n    headers: {\n      'Content-type': 'application/json',\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n      'X-RapidAPI-Host': process.env.REACT_APP_TRANSLATE_HOST\n    },\n    data: {\n      from,\n      to,\n      q: text\n    }\n  };\n  const response = await (await axios.request(options)).data[0];\n  return response;\n};\nexport const getTexttoVoice = async (language, text) => {\n  const encodedParams = new URLSearchParams();\n  encodedParams.set('src', text);\n  encodedParams.set('hl', language);\n  encodedParams.set('r', '0');\n  encodedParams.set('b64', 'true');\n  encodedParams.set('f', '8khz_8bit_mono');\n  const options = {\n    method: 'POST',\n    url: process.env.REACT_APP_TEXT_TO_SPEECH_API,\n    params: {\n      key: process.env.REACT_APP_TEXT_TO_SPEECH_KEY\n    },\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n      'X-RapidAPI-Host': process.env.REACT_APP_TEXT_TO_SPEECH_HOST\n    },\n    data: encodedParams\n  };\n  const response = await axios.request(options);\n  return response.data;\n};","map":{"version":3,"names":["axios","openNotification","getVideoID","url","videoid","match","getVideoSubtitles","videoId","console","log","process","env","REACT_APP_SUBTITLE_API","type","message","options","method","params","video_id","headers","REACT_APP_RAPID_API_KEY","REACT_APP_SUBTITLE_HOST","subtitles","data","getSummaryByText","text","endPoint","num_sentences","is_detailed","REACT_APP_SUMMARY_API","REACT_APP_SUMMARY_HOST","response","request","summary","getTranslation","from","to","REACT_APP_TRANSLATE_API","REACT_APP_TRANSLATE_HOST","q","getTexttoVoice","language","encodedParams","URLSearchParams","set","REACT_APP_TEXT_TO_SPEECH_API","key","REACT_APP_TEXT_TO_SPEECH_KEY","REACT_APP_TEXT_TO_SPEECH_HOST"],"sources":["C:/Users/Pawan/Desktop/genai-hackathon/src/apis/youtube-api.js"],"sourcesContent":["import axios from 'axios';\r\nimport openNotification from '../utils/notification';\r\n\r\nexport const getVideoID = (url) => {\r\n  var videoid = url.match(\r\n    /(?:https?:\\/{2})?(?:w{3}\\.)?youtu(?:be)?\\.(?:com|be)(?:\\/watch\\?v=|\\/)([^\\s&]+)/\r\n  );\r\n  if (videoid != null) {\r\n    return videoid[1];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getVideoSubtitles = async (url) => {\r\n  const videoId = getVideoID(url);\r\n  console.log(\"Key : \", process.env.REACT_APP_SUBTITLE_API);\r\n  if (!videoId) {\r\n    openNotification({\r\n      type: 'info',\r\n      message: 'Please enter valid URL',\r\n    });\r\n    return;\r\n  }\r\n  const options = {\r\n    method: 'GET',\r\n    url: process.env.REACT_APP_SUBTITLE_API,\r\n    params: {\r\n      video_id: videoId,\r\n    },\r\n    headers: {\r\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n      'X-RapidAPI-Host': process.env.REACT_APP_SUBTITLE_HOST,\r\n    },\r\n  };\r\n  const subtitles = (await axios(options)).data;\r\n  return subtitles;\r\n};\r\n\r\nexport const getSummaryByText = async (text, type) => {\r\n  const endPoint = type === 'text' ? 'summarize-text' : 'summarize-url';\r\n\r\n  const data =\r\n    type == 'text'\r\n      ? {\r\n          text,\r\n          num_sentences: 5,\r\n        }\r\n      : {\r\n          url: text,\r\n          num_sentences: 5,\r\n          is_detailed: false,\r\n        };\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    url: `${process.env.REACT_APP_SUMMARY_API}/${endPoint}/`,\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n      'X-RapidAPI-Host': process.env.REACT_APP_SUMMARY_HOST,\r\n    },\r\n    data,\r\n  };\r\n  const response = (await axios.request(options)).data.summary;\r\n  return response;\r\n};\r\n\r\nexport const getTranslation = async (\r\n  text,\r\n  from,\r\n  to\r\n) => {\r\n  const options = {\r\n    method: 'POST',\r\n    url: process.env.REACT_APP_TRANSLATE_API,\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n      'X-RapidAPI-Host': process.env.REACT_APP_TRANSLATE_HOST,\r\n    },\r\n    data: {\r\n      from,\r\n      to,\r\n      q: text,\r\n    },\r\n  };\r\n  const response = await (await axios.request(options)).data[0];\r\n  return response;\r\n};\r\n\r\nexport const getTexttoVoice = async (language,text) => {\r\n  const encodedParams = new URLSearchParams();\r\n  encodedParams.set('src', text);\r\n  encodedParams.set('hl', language);\r\n  encodedParams.set('r', '0');\r\n  encodedParams.set('b64', 'true');\r\n  encodedParams.set('f', '8khz_8bit_mono');\r\n  const options = {\r\n    method: 'POST',\r\n    url: process.env.REACT_APP_TEXT_TO_SPEECH_API,\r\n    params: {\r\n      key: process.env.REACT_APP_TEXT_TO_SPEECH_KEY,\r\n    },\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n      'X-RapidAPI-Host': process.env.REACT_APP_TEXT_TO_SPEECH_HOST,\r\n    },\r\n    data: encodedParams,\r\n  };\r\n  const response = await axios.request(options);\r\n  return response.data;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}